server.port = 9090

## Properties to connect using mySQL
#spring.datasource.url = jdbc:mysql://localhost:3306/spectra?useSSL=false
#spring.datasource.username = shashank
#spring.datasource.password = shashank
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

spring.datasource.initialization-mode=always
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto = create
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace


spring.mvc.view.prefix: /WEB-INF/pages/
spring.mvc.view.suffix: .jsp

## Properties to connect using SQL Server
#spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=jewel
#spring.datasource.username=sa
#spring.datasource.password=Passw0rd
#spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect

#logging.level.org.springframework.web: DEBUG

## Properties to connect using HSQL Server (Use same values to connect to console http://localhost:9090/h2-console)
spring.datasource.url=jdbc:h2:mem:jewel
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true


spring.data.solr.host=http://localhost:8983/solr/

#Spring batch configuration
spring.batch.initialize-schema=always
#Don't want to run the job automatically on startup. Spring integration will take care of executing the job when file is available
spring.batch.job.enabled=false

#Spring Integration configuration
dir.import=D:/Personal/SpectraImports/input

#Spring session 
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always

logging.level.org.apache.tomcat=WARN
logging.level.org.apache.catalina=WARN


